#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 73 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 2447 0 27 3 10 #"#lang plai"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;(print-only-errors #t)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 2 #" ("
0 0 14 3 10 #"for-syntax"
0 0 23 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 23 3 2 #") "
0 0 14 3 12 #"racket/match"
0 0 23 3 1 #" "
0 0 14 3 11 #"racket/list"
0 0 23 3 1 #" "
0 0 14 3 13 #"racket/string"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 7 #"only-in"
0 0 23 3 1 #" "
0 0 14 3 12 #"mzlib/string"
0 0 23 3 1 #" "
0 0 14 3 20 #"read-from-string-all"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; build a regexp that matches restricted character expressions, can"
 #" use only"
) 0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; {}s for lists, and limited strings that use '...' (normal racket "
 #"escapes"
) 0 0 23 29 1 #"\n"
0 0 17 3 34 #";; like \\n, and '' for a single ')"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"good-char"
0 0 23 3 1 #" "
0 0 19 3 47 #"\"(?:[ \\t\\r\\na-zA-Z0-9_{}!?*/<=>:+-]|[.][.][.])\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; this would make it awkward for students to use \\\" for strings"
0 0 23 29 1 #"\n"
0 0 17 3 56
(
 #";; (define good-string \"\\\""
 #"[^\\\"\\\\]*(?:\\\\\\\\.[^\\\"\\\\]*)*\\\"\")"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"good-string"
0 0 23 3 1 #" "
0 0 19 3 27 #"\"[^\\\"\\\\']*(?:''[^\\\"\\\\']*)*\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"expr-re"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"regexp"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"^\""
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 14 3 9 #"good-char"
0 0 19 3 3 #"\"*\""
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 19 3 6 #"\"(?:'\""
0 0 14 3 11 #"good-string"
0 0 19 3 3 #"\"'\""
0 0 14 3 9 #"good-char"
0 0 19 3 5 #"\"*)*\""
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 19 3 3 #"\"$\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"string-re"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"regexp"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"'(\""
0 0 14 3 11 #"good-string"
0 0 19 3 4 #"\")'\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->sexpr"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 23 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"string->sexpr"
0 0 23 3 1 #" "
0 0 19 3 35 #"\"expects argument of type <string>\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 23 3 2 #" ("
0 0 14 3 12 #"regexp-match"
0 0 23 3 1 #" "
0 0 14 3 7 #"expr-re"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"string->sexpr"
0 0 23 3 1 #" "
0 0 19 3 29 #"\"syntax error (bad contents)\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (["
0 0 14 3 6 #"sexprs"
0 0 23 3 2 #" ("
0 0 14 3 20 #"read-from-string-all"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 15 #"regexp-replace*"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 19 3 4 #"\"''\""
0 0 23 3 2 #" ("
0 0 14 3 15 #"regexp-replace*"
0 0 23 3 1 #" "
0 0 14 3 9 #"string-re"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"\\\"\\\\1\\\"\""
0 0 23 3 2 #") "
0 0 19 3 3 #"\"'\""
0 0 23 3 4 #"))])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 6 #"sexprs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 3 #"car"
0 0 23 3 1 #" "
0 0 14 3 6 #"sexprs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"string->sexpr"
0 0 23 3 1 #" "
0 0 19 3 35 #"\"bad syntax (multiple expressions)\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;----------Set debug mode-----------"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"debug"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";print: a helper function to print things nicely"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 14 3 7 #"comment"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"debug"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"display"
0 0 23 3 1 #" "
0 0 14 3 7 #"comment"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"display"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 7 #"display"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"void"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 58
#";;--------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 16 #";;TODO: add with"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 4 #"WFAE"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"num"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 2 #"id"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"with"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"WFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 16 #";;TODO: add with"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 5 #"CWFAE"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"cnum"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"cadd"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"csub"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 5 #"cwith"
0 0 23 3 2 #" ("
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 3 #") ("
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"cid"
0 0 23 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"cfun"
0 0 23 3 2 #" ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"capp"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 3 #") ("
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"numV"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 14 3 7 #"number?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 8 #"closureV"
0 0 23 3 2 #" ("
0 0 14 3 4 #"body"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 3 #") ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 9 #"CDefrdSub"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 6 #"mtCSub"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 5 #"aCSub"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 10 #"CDefrdSub?"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 16 #";;TODO: add with"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 10 #"CWFAE-Cont"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 3 #"mtK"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 1 #"a"
0 0 14 3 9 #"ddSecondK"
0 0 23 3 2 #" ("
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 6 #"doAddK"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 12 #"CWFAE-Value?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 10 #"subSecondK"
0 0 23 3 2 #" ("
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 6 #"doSubK"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 5 #"CWFAE"
0 0 14 3 7 #"-Value?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 7 #"appArgK"
0 0 23 3 2 #" ("
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 5 #"CWFAE"
0 0 14 3 1 #"?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 13 #"appNamedExprK"
0 0 23 3 2 #" ("
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"CWFAE?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 6 #"doAppK"
0 0 23 3 2 #" ("
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #" "
0 0 14 3 12 #"CWFAE-Value?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 7 #"doAppK2"
0 0 23 3 2 #" ("
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #" "
0 0 14 3 12 #"CWFAE-Value?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 1 #"k"
0 0 23 3 1 #" "
0 0 14 3 11 #"CWFAE-Cont?"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"DefrdSub?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 16 #";;TODO: add with"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 31 #";; parse-sexpr : S-expr -> WFAE"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"      [("
0 0 14 3 7 #"number?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"      [("
0 0 14 3 7 #"symbol?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #") ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"      [("
0 0 14 3 5 #"pair?"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 23 3 2 #" ("
0 0 14 3 3 #"car"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"         [("
0 0 14 3 1 #"+"
0 0 23 3 3 #") ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"         [("
0 0 14 3 1 #"-"
0 0 23 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"         [("
0 0 14 3 3 #"fun"
0 0 23 3 3 #") ("
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"         [("
0 0 14 3 4 #"with"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"sexp\""
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"first-sexp\""
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"with"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       )"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"          "
0 7         169 4           0 0           0 27 0 23 3 1 #"("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #")) ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 4 #"))))"
0           0 0 0 23 29 1 #"\n"
0 0 23 3 12 #"          )]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 23 3 8 #")))])]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 24 #";; parse: string -> WFAE"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 61
#";; parses a string containing a WFAE expression to a WFAE AST"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 11 #"parse-sexpr"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->sexpr"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 7         655 4           0 0           0 108 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 23 3 3 #") ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"{+ 1 2}\""
0 0 23 3 3 #") ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"{- 1 2}\""
0 0 23 3 3 #") ("
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"{fun {x} x}\""
0 0 23 3 3 #") ("
0 0 14 3 3 #"fun"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"{1 2}\""
0 0 23 3 3 #") ("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 30 #"\"{with {x {+ 1 17}} {+ x 12}}\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 31 #"\"{{fun {x} {+ x 12}} {+ 1 17}}\""
0 0 23 3 1 #")"
0           0 0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 36 #";; compile : WFAE CDefrdSub -> CWFAE"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 4 #"wfae"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 4 #"WFAE"
0 0 23 3 1 #" "
0 0 14 3 4 #"wfae"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 3 #"num"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cnum"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cadd"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #") ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 3 #") ("
0 0 14 3 4 #"csub"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #") ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 2 #"id"
0 0 23 3 2 #" ("
0 0 14 3 4 #"name"
0 0 23 3 3 #") ("
0 0 14 3 3 #"cid"
0 0 23 3 2 #" ("
0 0 14 3 6 #"locate"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 4 #"with"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 17 3 2 #";("
0 0 17 3 5 #"print"
0 0 17 3 1 #" "
0 0 17 3 19 #"\"with:cnamed-expr:\""
0 0 17 3 1 #" "
0 0 17 3 11 #"named-expr)"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 5 #"cwith"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 2 #" ("
0 0 14 3 5 #"aCSub"
0 0 23 3 1 #" "
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 4 #")) )"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 3 #"fun"
0 0 23 3 2 #" ("
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 4 #"body"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"cfun"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 4 #"body"
0 0 23 3 2 #" ("
0 0 14 3 5 #"aCSub"
0 0 23 3 1 #" "
0 0 14 3 5 #"param"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"capp"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #") ("
0 0 14 3 7 #"compile"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      )"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 38 #";; locate : symbol CDefrdSub -> number"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 46 #";; return the position of a symbol in the list"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"locate"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 9 #"CDefrdSub"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 6 #"mtCSub"
0 0 23 3 5 #" () ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"locate"
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"free"
0 0 19 3 1 #" "
0 0 19 3 9 #"variable\""
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 5 #"aCSub"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-name"
0 0 23 3 1 #" "
0 0 14 3 7 #"rest-ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"sub-name"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 20 3 1 #"0"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 6 #"locate"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 7 #"rest-ds"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 7         343 4           0 0           0 56 0 23 3 1 #"("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"{fun {x} 10}\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 51 #"\"{{fun {x} {{fun {f} {+ {f 1} {{fun {x} {f 2}} 3}}}"
0 0 19 29 1 #"\n"
0 0 19 3 46 #"                       {fun {y} {+ x y}}}} 0}\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 31 #"\"{{fun {x} {+ x 12}} {+ 1 17}}\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 30 #"\"{with {x {+ 1 17}} {+ x 12}}\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 19 3 31 #"\"{{fun {x} {+ x 12}} {+ 1 17}}\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 46 #";;helper function to deal with num op bullshit"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 81
(
 #";; num-op : (number number -> number) -> (KCFAE-Value KCFAE-Value ->"
 #" KCFAE-Value)"
) 0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 2 #"op"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"numV"
0 0 23 3 2 #" ("
0 0 14 3 2 #"op"
0 0 23 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #") ("
0 0 14 3 6 #"numV-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"num+"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 1 #"+"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"num-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 23 3 1 #" "
0 0 14 3 1 #"-"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 70
(
 #";;------------------------------------------------------------------"
 #"--"
) 0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 17 #";;global register"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cnum"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 3 #"mtK"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 45 #";;------something something dark side--------"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"search"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 5 #"\"ds2\""
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 8 #"continue"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 6 #"search"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 49 #";;-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"print-debug"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 18 #"\"----------interp\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"void"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"cwfae"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"k-reg"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"ds-reg"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"v-reg"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      )"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 26 #";; interp : -> CWFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 17 3 2 #";("
0 0 17 3 5 #"print"
0 0 17 3 2 #" \""
0 0 17 3 2 #"ds"
0 0 17 3 1 #"\""
0 0 17 3 8 #" ds-reg)"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 11 #"print-debug"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 5 #"CWFAE"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"cnum"
0 0 23 3 2 #" ("
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 17 3 9 #";(print \""
0 0 17 3 17 #"cwfae\" cwfae-reg)"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 8 #"continue"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"cadd"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 10 #"addSecondK"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                )"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"csub"
0 0 23 3 2 #" ("
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 10 #"subSecondK"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                )"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 5 #"cwith"
0 0 23 3 3 #" ( "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 17 3 4 #";..."
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"--------"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 4 #"void"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 11 #"\"named-expr"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"body-expr"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 13 #"appNamedExprK"
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 3 #"cid"
0 0 23 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 7 #"ds2-reg"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 14 3 3 #"pos"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 6 #"search"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"cfun"
0 0 23 3 2 #" ("
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 8 #"closureV"
0 0 23 3 1 #" "
0 0 14 3 9 #"body-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 8 #"continue"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"capp"
0 0 23 3 2 #" ("
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"fun-expr"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"arg-expr"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 7 #"appArgK"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        )"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      )"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 28 #";; continue : -> CWFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"continue"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 17 3 11 #";(display \""
0 0 17 3 12 #"continue\\n\")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 17 3 14 #";(print-debug)"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 15 3 9 #"type-case"
0 0 23 3 1 #" "
0 0 14 3 10 #"CWFAE-Cont"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 3 #"mtK"
0 0 23 3 3 #" ()"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 10 #"addSecondK"
0 0 23 3 2 #" ("
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 6 #"doAddK"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 6 #"doAddK"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"num+"
0 0 23 3 1 #" "
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 8 #"continue"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 10 #"subSecondK"
0 0 23 3 2 #" ("
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 6 #"doSubK"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 6 #"doSubK"
0 0 23 3 2 #" ("
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"num-"
0 0 23 3 1 #" "
0 0 14 3 2 #"v1"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 8 #"continue"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 7 #"appArgK"
0 0 23 3 2 #" ("
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 17 3 4 #";..."
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 6 #"doAppK"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 13 #"appNamedExprK"
0 0 23 3 2 #" ("
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 17 3 4 #";..."
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 14 #"\"appNamedExprK"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 10 #"named-expr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 1 #" "
0 0 14 3 2 #"ds"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 24 #"\"yoloyoloyolo: ds-reg :\""
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 19 #"\"yoloyoloyolo: k :\""
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 6 #"doAppK"
0 0 23 3 2 #" ("
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 17 3 4 #";..."
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 17 3 7 #";(print"
0 0 17 3 2 #" \""
0 0 17 3 7 #"fun-val"
0 0 17 3 10 #"\" fun-val)"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 2 #" ("
0 0 14 3 13 #"closureV-body"
0 0 23 3 1 #" "
0 0 14 3 7 #"fun-val"
0 0 23 3 3 #" ))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"closureV-ds"
0 0 23 3 1 #" "
0 0 14 3 7 #"fun-val"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 7 #"doAppK2"
0 0 23 3 2 #" ("
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 17 3 4 #";..."
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 5 #"print"
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 15 #"With:fun-val\\n\""
0 0 23 3 1 #" "
0 0 14 3 7 #"fun-val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 2 #" ("
0 0 14 3 13 #"closureV-body"
0 0 23 3 1 #" "
0 0 14 3 7 #"fun-val"
0 0 23 3 3 #" ))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 17 3 2 #";("
0 0 17 3 4 #"set!"
0 0 17 3 1 #" "
0 0 17 3 6 #"ds-reg"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 5 #"v-reg"
0 0 17 3 2 #"  "
0 0 17 3 4 #"ds))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 1 #" "
0 0 14 3 1 #"k"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        )"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"      ))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 22 #";; init : void -> void"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"init"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"k-reg"
0 0 23 3 2 #" ("
0 0 14 3 3 #"mtK"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 5 #"v-reg"
0 0 23 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 6 #"ds-reg"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 24 #"interp-with-default-init"
0 0 23 3 1 #" "
0 0 14 3 3 #"smt"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"init"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 1 #" "
0 0 14 3 3 #"smt"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 6 #"interp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      )"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    )"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 30 #";; run : string -> CWFAE-Value"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 48 #";; evaluate a WFAE program contained in a string"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 9 #"cwfae-reg"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 3 #") ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"init"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 6 #"interp"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 6 #";;;..."
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 14 #";;passed tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"10\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"{+ 10 7}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"{- 10 7}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 31 #"\"{{fun {x} {+ x 12}} {+ 1 17}}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 51 #"\"{{fun {x} {{fun {f} {+ {f 1} {{fun {x} {f 2}} 3}}}"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                       {"
0 0 19 3 3 #"fun"
0 0 19 3 2 #" {"
0 0 19 3 1 #"y"
0 0 19 3 3 #"} {"
0 0 19 3 1 #"+"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"y"
0 0 19 3 5 #"}}}} "
0 0 19 3 1 #"0"
0 0 19 3 2 #"}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 24 #"interp-with-default-init"
0 0 23 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 3 #"app"
0 0 23 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 20 3 2 #"17"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 6 #"mtCSub"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                )"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 22 #"\"{with {x 5} {+ x x}}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 41 #"\"{with {x {with {a 1} {+ a 4}}} {+ x x}}\""
0 0 23 3 4 #" ) ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 35 #"\"{with {x 5} {+ x {with {x 3} x}}}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 3 #"run"
0 0 23 3 1 #" "
0 0 19 3 35 #"\"{with {y 5} {+ 3 {with {x 3} y}}}\""
0 0 23 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0           0
